name: Prometheus Deploy

on:
  workflow_dispatch:
    inputs:
      installation:
        description: 'GitHub App Installion #'
        required: true
  workflow_call:
    inputs:
      installation:
        description: 'GitHub App Installion #'
        required: true
        type: string


env:
  RESOURCE_GROUP: GH-Rover
  STORAGE_NAME: ghroverstorage
  BACKEND_SUBNET_NAME: backendSubnet
  VNET_NAME: GHRoverVNet
  
permissions: 
  id-token: write

jobs:
  debug:
    runs-on: ubuntu-latest
    steps: 
    - run: |
        echo 'installation: ${{ inputs.installation }}'
        echo 'installation ${{ github.event.inputs.installation }}'
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Azure Login
      uses: Azure/login@v1.4.4
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Create storage
      run: |
        az deployment group create --resource-group ${{ env.RESOURCE_GROUP }} --template-file deploy/prometheus-storage.bicep \
          --parameters storageName=${{ env.STORAGE_NAME }} installation=${{github.event.inputs.installation}}
    
    - name: Get storage access key
      id: storageAccessKey
      run: |
        storageAccessKey=$(az storage account keys list --resource-group  ${{ env.RESOURCE_GROUP }} --account-name ${{ env.STORAGE_NAME }} --query "[0].value" --out tsv)
        echo "::add-mask::${storageAccessKey}"
        echo "::set-output name=value::${storageAccessKey}"
    
    - name: Generate and upload Prometeus configuration file
      run: | 
        sed -i 's/${installation}/${{github.event.inputs.installation}}/g' deploy/prometheus.yml
        az storage file upload --account-name ${{ env.STORAGE_NAME }}  --account-key ${{ steps.storageAccessKey.outputs.value }} --share-name prometheus-${{github.event.inputs.installation}}-config --path prometheus.yml --source deploy/prometheus.yml

    - name: Provision a Prometheus instance
      run: |
        az deployment group create --resource-group ${{ env.RESOURCE_GROUP }} --template-file deploy/prometheus.bicep \
          --parameters storageName=${{ env.STORAGE_NAME }} installation=${{github.event.inputs.installation}} \
            virtualNetworkName=${{ env.VNET_NAME }} backendSubnetName=${{ env.BACKEND_SUBNET_NAME }} \
    
   