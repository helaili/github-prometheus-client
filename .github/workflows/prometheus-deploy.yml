name: Prometheus Deploy

on:
  workflow_dispatch:
    inputs:
      installation:
        description: 'GitHub App Installion #'
        required: true

env:
  RESOURCE_GROUP: GH-Rover
  STORAGE_NAME: ghroverstorage

permissions: 
  id-token: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Azure Login
      uses: Azure/login@v1.4.4
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Create storage
      run: |
        az deployment group create --resource-group ${{ env.RESOURCE_GROUP }} --template-file deploy/prometheus-storage.bicep \
          --parameters storageName=${{ env.STORAGE_NAME }} installation=${{github.event.inputs.installation}}
    
    - name: Get storage access key
      id: storageAccessKey
      run: |
        echo "::set-output name=value::$(az storage account keys list --resource-group  ${{ env.RESOURCE_GROUP }} --account-name ${{ env.STORAGE_NAME }} --query "[0].value" --out tsv)"
    
    - name: Mask the storage access key
      run: |
        echo "::add-mask::${{ steps.storageAccessKey.outputs.value }}"
    
    - name: Generate and upload Prometeus configuration file
      run: | 
        sed -i 's/${installation}/${{github.event.inputs.installation}}/g' deploy/prometheus.yml
        az storage file upload --account-name ${{ env.STORAGE_NAME }}  --account-key ${{ steps.storageAccessKey.outputs.value }} --share-name prometheus-${{github.event.inputs.installation}}-config --path prometheus.yml --source deploy/prometheus.yml

    - name: Provision a Prometheus instance
      run: |
        az deployment group create --resource-group ${{ env.RESOURCE_GROUP }} --template-file deploy/prometheus.bicep \
          --parameters storageName=${{ env.STORAGE_NAME }} installation=${{github.event.inputs.installation}}
    
   